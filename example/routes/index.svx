Tiny Robots is a frontend build system and anti-framework built on top of [Svelte](https://svelte.dev/) designed to help you build and ship ambitious web apps expeditiously.

Tiny Robots aims to:
- Get out of your way.
- Do the grunt work and write the boring code for you.
- Be predictable, and easy to debug when it's not.
- Empower code authors with a near-instant feedback loop during development.
- Generate extremely fast, performant bundles.
- Invest in [ES modules](https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/) and the future of web technologies.
- Embrace [Svelte's philosphy](https://svelte.dev/blog/write-less-code) whilst adding as little runtime overhead as possible.

_Check out the code for this site [here](https://github.com/mkshio/tiny-robots/tree/master/example)._

### Features 🌈 

- 🔥 Ultrafast hot module replacement. 🔥 Seriously, we're talking really frickin' fast. Tiny Robots uses [Snowpack](https://www.snowpack.dev/) in development mode, so hot updates stay fast no matter how large your app gets.
- Hightly configurable universal data fetching. Routes can be loaded eagerly or wait until their data is loaded.
- Static site generation with dynamic data loading. Just run `yarn run tr export`.
- Client side routing.
- Filesystem-based routing, with directory-based layouts and global app layout.
- Global CSS/JS support for stuff like vendor code or analytics. Just create a `global` directory and all of it's contents will get inlined into every page.
- Markdown in your Svelte with [mdsvex](https://mdsvex.com/).

---

### 1. Setup 📦

```shell
# --- simple setup ---
yarn add tiny-robots # or npm install tiny-robots
mkdir routes && touch routes/index.svelte # your first route

# --- create special directories ---
yarn run tr init
# --- or ---
mkdir static # optional - static assets (images, fonts) go here
touch index.html # optional - an HTML shell
mkdir global # optional - global css/js files go here; they'll automatically be inlined
```

### 2. Develop 👩🏽‍💻

```shell
yarn run tr
```

Runs your app with [Snowpack](https://www.snowpack.dev/).

### 3. Ship 🚀

```shell
yarn run tr export
```

Generates an `./export` directory containing production-ready static HTML pages and JS bundles using [Rollup](https://rollupjs.org/guide/en/).

Adding `--dev` will produce a build for diagnostics. Presently, it generates an unminified bundle, but more features may be added under this flag in the future.

---

### WIP/Roadmap 🏗

#### Pending

- Error pages.
  - Error recovery in dev.
- Plain 'ol js routes.
- TypeScript support.
- Remove console noise.

#### Coming soon

- More HTML features.
  - Partials.
  - Merge head/body with template/layouts.
- Image preloads.
  - Add images to manifest.
- "Get static routes" capability.
- Generators for Netlify/Vercel/etc.
  - "Deploy on X" buttons.
  - Slugs, catchall routes and URL rewrites.
  - Abstraction for lambdas.
- SEO defaults.
  - Meta tags.
  - Social cards.
  - Sitemaps.
- Route asset preloads on page transition.
  - Scans for hrefs to other pages and preloads them.
- PWA/service worker.
- Per-component rehydration opt-out (i.e. server-only components).
- SSR mode.
  - Vercel runtime integration.
  - Server hooks.
- Better CSS extraction.
- Support for React pages.
- esbuild for production.
