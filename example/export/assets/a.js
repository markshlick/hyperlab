import {S as SvelteComponent,i as init,s as safe_not_equal,e as element,t as text,c as claim_element,a as children,b as claim_text,d as detach,f as insert,g as append,n as noop,h as create_slot,j as space,k as claim_space,u as update_slot,l as transition_in,m as transition_out,R as Route,A as App}from'./_app-b77cb0b6.js';/* routes/path/a.svelte generated by Svelte v3.32.2 */

function create_fragment(ctx) {
	let h3;
	let t;

	return {
		c() {
			h3 = element("h3");
			t = text("a");
		},
		l(nodes) {
			h3 = claim_element(nodes, "H3", {});
			var h3_nodes = children(h3);
			t = claim_text(h3_nodes, "a");
			h3_nodes.forEach(detach);
		},
		m(target, anchor) {
			insert(target, h3, anchor);
			append(h3, t);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h3);
		}
	};
}

class A extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}var a=/*#__PURE__*/Object.freeze({__proto__:null,'default': A});/* routes/path/_layout.svelte generated by Svelte v3.32.2 */

function create_fragment$1(ctx) {
	let h2;
	let t0;
	let t1;
	let current;
	const default_slot_template = /*#slots*/ ctx[1].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);

	return {
		c() {
			h2 = element("h2");
			t0 = text("path");
			t1 = space();
			if (default_slot) default_slot.c();
		},
		l(nodes) {
			h2 = claim_element(nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "path");
			h2_nodes.forEach(detach);
			t1 = claim_space(nodes);
			if (default_slot) default_slot.l(nodes);
		},
		m(target, anchor) {
			insert(target, h2, anchor);
			append(h2, t0);
			insert(target, t1, anchor);

			if (default_slot) {
				default_slot.m(target, anchor);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 1) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[0], dirty, null, null);
				}
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(h2);
			if (detaching) detach(t1);
			if (default_slot) default_slot.d(detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;

	$$self.$$set = $$props => {
		if ("$$scope" in $$props) $$invalidate(0, $$scope = $$props.$$scope);
	};

	return [$$scope, slots];
}

class Layout extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment$1, safe_not_equal, {});
	}
}// @start: generated by hyperlab

const start = ({ pageProps, hydrate }) => {
  const root = new Route({
    target: document.body,
    hydrate,
    props: {
      ...routeProps(),
      pageProps
    }
  });

  import('./app-8478ed84.js').then(m => m.start({ root, dev: false }));
};

const routeProps = () => ({
  appLayoutComponent: App,
  layoutComponent: Layout,
  pageComponent: A,
});

// @end
export{a as page,routeProps,start};